generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  page          Page?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Page {
  id String @id @default(uuid())

  name        String
  link        String  @unique
  description String  @db.Text
  imageUrl    String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  buttons Button[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Button {
  id String @id @default(uuid())

  text  String
  href  String
  color ButtonColor

  page   Page   @relation(fields: [pageId], references: [id], onDelete: Cascade)
  pageId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ButtonColor {
  WHITE
  BLACK
  RED
  GREEN
}
